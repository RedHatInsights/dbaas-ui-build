{"version":3,"file":"js/exposed-./RootApp.52e95b2c3b216445bc01.js","mappings":"2LAMA,MAAMA,GAAW,IAAAC,OAAK,IACpB,qHAEIC,GAAU,IAAAD,OACd,IAAM,0DAkBR,EAfe,IACb,kBAAC,EAAAE,SAAQ,CACPC,SACE,kBAAC,EAAAC,SAAQ,KACP,kBAAC,EAAAC,QAAO,QAIZ,kBAAC,SAAY,KACX,kBAAC,EAAAC,MAAK,CAACC,KAAK,oBAAoBC,QAAS,kBAACP,EAAO,QACjD,kBAAC,EAAAK,MAAK,CAACC,KAAK,IAAIC,QAAS,kBAACT,EAAQ,UCHxC,EAdY,MACV,IAAAU,YAAU,KACRC,SAASC,MACP,mEAAmE,GACpE,IAGD,kBAAC,EAAAC,SAAQ,KACP,kBAAC,KAAmB,MACpB,kBAAC,EAAM,Q,gECRkB,IAAAC,eAAc,CAC3CC,YAAa,SCHf,MASA,EATiB,KACf,MAAMC,GAAW,IAAAC,QDKZ,YAAiBC,GACtB,MAAMF,EAAW,IAAIG,EAAA,GAAgB,CAAC,EAAG,CACvC,KACA,EAAAC,EAAA,IAAwB,CACtBC,oBAAqB,CAAC,SAAU,cAE/BH,EAAWI,QAAQC,QAAyB,IAATA,MAaxC,OAVAP,EAASQ,SAAS,CAChBC,cAAe,OASVT,CACT,CCzB0BU,IACxB,OACE,kBAAC,KAAQ,CAACC,MAAOX,EAASY,QAAQC,YAChC,kBAAC,EAAG,MAEP,C","sources":["webpack:///./src/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/store/index.ts","webpack:///./src/AppEntry.tsx"],"sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { Route, Routes as RouterRoutes } from 'react-router-dom';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\n// eslint-disable-next-line prettier/prettier\nconst HomePage = lazy(() =>\n  import(/* webpackChunkName: \"HomePage\" */ './Routes/HomePage')\n);\nconst TASPage = lazy(\n  () => import(/* webpackChunkName: \"TASPage\" */ './Routes/ArtifactSignerPage')\n);\n\nconst Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <RouterRoutes>\n      <Route path=\"artifact-signer/*\" element={<TASPage />} />\n      <Route path=\"/\" element={<HomePage />} />\n    </RouterRoutes>\n  </Suspense>\n);\n\nexport default Routes;\n","import React, { Fragment, useEffect } from 'react';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\n\nimport Routes from './Routes';\nimport './App.scss';\n\nconst App = () => {\n  useEffect(() => {\n    document.title =\n      'Trusted Profile Analyzer | Red Hat OpenShift Application Services';\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Routes />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { createContext } from 'react';\nimport ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Middleware, Reducer } from 'redux';\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nexport function init(...middleware: Middleware[]) {\n  const registry = new ReducerRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({\n      errorDescriptionKey: ['detail', 'stack'],\n    }),\n    ...middleware.filter((item) => typeof item !== 'undefined'),\n  ]);\n\n  registry.register({\n    notifications: notificationsReducer as Reducer,\n  });\n\n  //If you want to register all of your reducers, this is good place.\n  /*\n   *  registry.register({\n   *    someName: (state, action) => ({...state})\n   *  });\n   */\n  return registry;\n}\n","import React, { useRef } from 'react';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\n\nconst AppEntry = () => {\n  const registry = useRef(init());\n  return (\n    <Provider store={registry.current.getStore()}>\n      <App />\n    </Provider>\n  );\n};\n\nexport default AppEntry;\n"],"names":["HomePage","lazy","TASPage","Suspense","fallback","Bullseye","Spinner","Route","path","element","useEffect","document","title","Fragment","createContext","getRegistry","registry","useRef","middleware","ReducerRegistry","notificationsMiddleware","errorDescriptionKey","filter","item","register","notifications","init","store","current","getStore"],"sourceRoot":""}