{"version":3,"file":"js/359.df43cb16f27a05d598c1.js","mappings":"2MAcO,MAAMA,EAAoD,EAC/DC,SACAC,SAAS,SACTC,OACAC,YACAC,SACAC,cAEA,kBAAC,EAAAC,OAAM,eACQN,EACbO,UAAQ,EACRH,OAAQA,EACRI,QAAS,EAAAC,cAAcC,KACvBC,UAAU,IACVV,OAAQA,EACRC,KAAMA,GAELG,EACD,0BAAMO,MAAO,CAAEC,WAAY,W,IAEzB,kBAAC,IAAmB,CAACV,UAAWA,MCdhCW,EAAiB,IAEnB,6BACE,kBAAC,EAAAC,YAAW,KACV,kBAAC,EAAAC,KAAI,CAACL,UAAW,EAAAM,aAAaC,GAAC,gXAQ/B,kBAAC,EAAAF,KAAI,CAACL,UAAW,EAAAM,aAAaC,G,wEAC0C,IACtE,kBAACnB,EAAY,CAACG,KAAM,4BAA6BF,OAAQ,IAAE,oBAE3C,I,2BAYpBmB,EAAyB,EAC7BC,mBACAC,0BAGE,yBACET,MAAO,CACLU,UAAW,SAGb,kBAAC,EAAAP,YAAW,KACV,kBAAC,EAAAC,KAAI,CAACL,UAAW,EAAAM,aAAaC,GAAC,wEAG/B,yBACEN,MAAO,CACLW,cAAe,MACfC,QAAS,SAGX,kBAAC,EAAAlB,OAAM,CAACE,QAAQ,UAAUiB,QAASL,GAAgB,wBAGnD,kBAAC,EAAAd,OAAM,CACLE,QAAQ,OACRiB,QAASJ,EACTK,aAAa,QACbC,KAAM,kBAAC,IAAyB,OAAG,4CAUzCC,EAAgD,EACpDR,mBACAC,0BAGE,yBACElB,UAAU,wBACV0B,GAAG,wBACHjB,MAAO,CACLkB,YAAa,SAGf,kBAAChB,EAAc,MACf,kBAACK,EAAsB,CACrBC,iBAAkBA,EAClBC,qBAAsBA,KAM9BO,EAAeG,YAAc,iBAE7B,S","sources":["webpack:///./src/components/ExternalLink.tsx","webpack:///./src/components/ArtifactSigner/artifact-signer.tsx"],"sourcesContent":["import React from 'react';\nimport type { ButtonProps } from '@patternfly/react-core';\nimport { Button, ButtonVariant } from '@patternfly/react-core';\nimport type { FunctionComponent } from 'react';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nexport type ExternaLinkProps = React.PropsWithChildren<{\n  testId: string;\n  target?: ButtonProps['target'];\n  href: NonNullable<ButtonProps['href']>;\n  className?: string;\n  ouiaId?: ButtonProps['ouiaId'];\n}>;\n\nexport const ExternalLink: FunctionComponent<ExternaLinkProps> = ({\n  testId,\n  target = '_blank',\n  href,\n  className,\n  ouiaId,\n  children,\n}: ExternaLinkProps) => (\n  <Button\n    data-testid={testId}\n    isInline\n    ouiaId={ouiaId}\n    variant={ButtonVariant.link}\n    component=\"a\"\n    target={target}\n    href={href}\n  >\n    {children}\n    <span style={{ whiteSpace: 'nowrap' }}>\n      &nbsp;\n      <ExternalLinkAltIcon className={className} />\n    </span>\n  </Button>\n);\n","import './artifact-signer.scss';\nimport {\n  Button,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ExternalLinkSquareAltIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { ExternalLink } from '../ExternalLink';\n\ntype ArtifactSignerProps = {\n  currentStep: number;\n  onDownloadSecret: () => void;\n  onDocumentationClick: () => void;\n  userHasDownloadedSecret: boolean;\n  nextStep: () => void;\n  previousStep: () => void;\n};\n\nconst GettingStarted = () => {\n  return (\n    <div>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Trusted Artifact Signer empowers software developers and consumers to\n          securely sign and verify software artifacts, such as, source code,\n          release files, container images, binaries, software bill of materials\n          (SBOM), playbooks, and more to enhance software supply chain security.\n          Signing metadata are stored in a tamper-resistant log for transparency\n          & verification.\n        </Text>\n        <Text component={TextVariants.p}>\n          Trusted Artifact Signer provides a production ready deployment of the{' '}\n          <ExternalLink href={'https://www.sigstore.dev/'} testId={''}>\n            Sigstore project\n          </ExternalLink>{' '}\n          within an enterprise.\n        </Text>\n      </TextContent>\n    </div>\n  );\n};\n\ntype DownloadPullSecretStepProps = {\n  onDownloadSecret: () => void;\n  onDocumentationClick: () => void;\n};\nconst DownloadPullSecretStep = ({\n  onDownloadSecret,\n  onDocumentationClick,\n}: DownloadPullSecretStepProps) => {\n  return (\n    <div\n      style={{\n        marginTop: '1rem',\n      }}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          To get started, download the pull secret needed for your deployment.\n        </Text>\n        <div\n          style={{\n            flexDirection: 'row',\n            display: 'flex',\n          }}\n        >\n          <Button variant=\"primary\" onClick={onDownloadSecret}>\n            Download Pull Secret\n          </Button>\n          <Button\n            variant=\"link\"\n            onClick={onDocumentationClick}\n            iconPosition=\"right\"\n            icon={<ExternalLinkSquareAltIcon />}\n          >\n            Trusted Artifact Signer Documentation\n          </Button>\n        </div>\n      </TextContent>\n    </div>\n  );\n};\n\nconst ArtifactSigner: React.FC<ArtifactSignerProps> = ({\n  onDownloadSecret,\n  onDocumentationClick,\n}: ArtifactSignerProps) => {\n  return (\n    <div\n      className=\"secure-sign-component\"\n      id=\"secure-sign-component\"\n      style={{\n        paddingLeft: '1rem',\n      }}\n    >\n      <GettingStarted />\n      <DownloadPullSecretStep\n        onDownloadSecret={onDownloadSecret}\n        onDocumentationClick={onDocumentationClick}\n      />\n    </div>\n  );\n};\n\nArtifactSigner.displayName = 'ArtifactSigner';\n\nexport default ArtifactSigner;\n"],"names":["ExternalLink","testId","target","href","className","ouiaId","children","Button","isInline","variant","ButtonVariant","link","component","style","whiteSpace","GettingStarted","TextContent","Text","TextVariants","p","DownloadPullSecretStep","onDownloadSecret","onDocumentationClick","marginTop","flexDirection","display","onClick","iconPosition","icon","ArtifactSigner","id","paddingLeft","displayName"],"sourceRoot":""}