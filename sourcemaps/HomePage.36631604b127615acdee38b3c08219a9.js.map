{"version":3,"file":"js/HomePage.df43cb16f27a05d598c1.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/useChrome/useChrome.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Dark/DarkContext.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeader.js","webpack:///./src/Routes/HomePage/index.tsx","webpack:///./src/Routes/HomePage/consts.ts","webpack:///./src/common/analytics.ts"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useScalprum } from '@scalprum/react-core';\nvar useChrome = function (selector) {\n    var _a;\n    var state = useScalprum();\n    var chrome = ((_a = state.api) === null || _a === void 0 ? void 0 : _a.chrome) || {};\n    chrome = __assign(__assign({}, chrome), { initialized: state.initialized });\n    if (typeof selector === 'function') {\n        return selector(chrome);\n    }\n    return chrome;\n};\nexport default useChrome;\n//# sourceMappingURL=useChrome.js.map","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react';\nvar DarkContext = React.createContext('light');\nexport default DarkContext;\n//# sourceMappingURL=DarkContext.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { DarkContext } from '../Dark';\nimport '../PageHeader/page-header.css';\nvar PageHeader = function (_a) {\n    var className = _a.className, children = _a.children, props = __rest(_a, [\"className\", \"children\"]);\n    var pageHeaderClasses = classNames(className, 'pf-v5-l-page-header', 'pf-v5-c-page-header', 'pf-v5-l-page__main-section', 'pf-v5-c-page__main-section');\n    return (_jsx(DarkContext.Consumer, { children: function (theme) {\n            var _a, _b;\n            if (theme === void 0) { theme = 'light'; }\n            var themeClasses = classNames((_a = {}, _a[\"pf-m-\".concat(theme, \"-200\")] = theme === 'dark', _a), (_b = {}, _b[\"pf-m-light\"] = theme === 'light', _b));\n            return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(pageHeaderClasses, \" \").concat(themeClasses), \"widget-type\": \"InsightsPageHeader\", children: children })));\n        } }));\n};\nexport default PageHeader;\n//# sourceMappingURL=PageHeader.js.map","/* eslint react/prop-types: 0 */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  addNotification,\n  clearNotifications,\n} from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useEffect } from 'react';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport {\n  Button,\n  ButtonProps,\n  Divider,\n  Flex,\n  FlexItem,\n  Grid,\n  GridItem,\n  PageSection,\n  Popover,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  Title,\n} from '@patternfly/react-core';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { getTrustificationUrl } from './consts';\nimport events from '../../common/analytics';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport './home-page.scss';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const { analytics } = useChrome();\n  const [hasJoinedList, setHasJoinedList] = useState(false);\n\n  const waitlistNotif = () => {\n    if (!hasJoinedList) {\n      setHasJoinedList(true);\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Thank you',\n          description: (\n            <>\n              <p>\n                You have been added to the waiting list. Red Hat will notify you\n                when susbcription options for the Trusted Content service become\n                available\n              </p>\n              <br />\n              <Button\n                variant=\"link\"\n                component=\"a\"\n                href=\"https://rhdevnation.slack.com/archives/C04LXT1EU7K\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                icon={<ExternalLinkAltIcon />}\n                iconPosition=\"right\"\n                isInline\n              >\n                Join the #software-supply-chain-security channel on Slack\n              </Button>\n            </>\n          ),\n        })\n      );\n    } else {\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title:\n            'Thank you for your interest. We are processing your previous request.',\n          description: (\n            <>\n              <p>\n                We are working hard to get you early access. After we approve\n                your request, we will send you an email notification with\n                information about how you can access and start using the\n                service.\n              </p>\n              <br />\n              <Button\n                variant=\"link\"\n                component=\"a\"\n                href=\"https://rhdevnation.slack.com/archives/C04LXT1EU7K\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                icon={<ExternalLinkAltIcon />}\n                iconPosition=\"right\"\n                isInline\n              >\n                Join the #software-supply-chain-security channel on Slack\n              </Button>\n            </>\n          ),\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    dispatch(clearNotifications());\n  }, []);\n\n  const launchTrustedContentButton = (\n    <Button\n      href={getTrustificationUrl()}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      component=\"a\"\n      variant=\"primary\"\n      ouiaId=\"button-try-tc-1\"\n      size=\"lg\"\n    >\n      Launch Trusted Content\n    </Button>\n  );\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"dbaas-home-page__header pf-v5-u-p-2xl\">\n        <Grid>\n          <GridItem sm={12} md={6}>\n            <Title size=\"2xl\" headingLevel=\"h1\">\n              Get started with Red Hat Trusted Content\n            </Title>\n            <Stack hasGutter>\n              <StackItem>\n                <TextContent className=\"dbaas-home-page__subtitle\">\n                  <Text>&nbsp;</Text>\n                  <Text>\n                    Red Hat Trusted Content increases trust and integrity in\n                    source code and accelerates the application development\n                    process by providing recommendations for trusted components,\n                    software composition analysis and vulnerability remediation\n                    tactics directly in your IDE.\n                  </Text>\n                  <Text>\n                    Verify components easily by using Red Hat Trusted Content to\n                    quickly find Software Bill of Materials (SBOMs) and\n                    Vulnerability Exploitability eXchange (VEX) for Red Hat\n                    products and packages or upload your own SBOM for analysis.\n                    Use what we use, know what we know.\n                  </Text>\n                  <Text>&nbsp;</Text>\n                  <Split hasGutter>\n                    <SplitItem>{launchTrustedContentButton}</SplitItem>\n                    <SplitItem>\n                      <Popover\n                        aria-label=\"Subcribe popover\"\n                        headerContent={<div>Subscribe</div>}\n                        bodyContent={\n                          <div>\n                            you cannot subscribe to the service right now, but\n                            the service is currently free for you to use. Please\n                            sign up below if you want to get notified about it\n                          </div>\n                        }\n                        footerContent={\n                          <Button\n                            onClick={() => {\n                              analytics.track(events.TC_WAITING_LIST_CLICK);\n                              waitlistNotif();\n                              return false;\n                            }}\n                          >\n                            Add me to the waiting list\n                          </Button>\n                        }\n                      >\n                        <Button\n                          variant=\"secondary\"\n                          ouiaId=\"button-subscribe-tc-1\"\n                          size=\"lg\"\n                          style={\n                            {\n                              color: 'white',\n                              '--pf-v5-c-button--after--BorderColor': 'white',\n                            } as ButtonProps['style']\n                          }\n                        >\n                          Subscribe\n                        </Button>\n                      </Popover>\n                    </SplitItem>\n                  </Split>\n                </TextContent>\n              </StackItem>\n            </Stack>\n          </GridItem>\n        </Grid>\n      </PageHeader>\n\n      {\n        <PageSection\n          variant=\"light\"\n          className=\"appsrv-marketing--page-section--marketing pf-v5-u-background-color-100\"\n        >\n          <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n            <Flex>\n              <FlexItem spacer={{ default: 'spacerXl' }}>&nbsp;</FlexItem>\n            </Flex>\n\n            <Flex flex={{ default: 'flex_1' }}>\n              <FlexItem className=\"rh-icon-flex\">\n                <Stack>\n                  <StackItem>\n                    <div className=\"pf-v5-u-text-align-center rh-secure rh-icon\">\n                      &nbsp;\n                    </div>\n                  </StackItem>\n                  <StackItem>\n                    <div className=\"pf-v5-u-text-align-center\">\n                      Get recommendations and <br />\n                      fixes right in your IDE\n                    </div>\n                  </StackItem>\n                </Stack>\n              </FlexItem>\n            </Flex>\n\n            <Divider className=\"pf-m-vertical\" />\n\n            <Flex flex={{ default: 'flex_1' }}>\n              <FlexItem className=\"rh-icon-flex\">\n                <Stack>\n                  <StackItem>\n                    <div className=\"pf-v5-u-text-align-center rh-clipboard rh-icon\">\n                      &nbsp;\n                    </div>\n                  </StackItem>\n                  <StackItem>\n                    <div className=\"pf-v5-u-text-align-center\">\n                      Find SBOMs or VEXes for your\n                      <br /> Red Hat package or product\n                    </div>\n                  </StackItem>\n                </Stack>\n              </FlexItem>\n            </Flex>\n\n            <Divider className=\"pf-m-vertical\" />\n\n            <Flex flex={{ default: 'flex_1' }}>\n              <FlexItem className=\"rh-icon-flex\">\n                <Stack>\n                  <StackItem>\n                    <div className=\"pf-v5-u-text-align-center rh-shield rh-icon\">\n                      &nbsp;\n                    </div>\n                  </StackItem>\n                  <StackItem>\n                    <div className=\"pf-v5-u-text-align-center\">\n                      Upload your own SBOM to learn more\n                      <br /> about dependencies and vulnerabilities\n                    </div>\n                  </StackItem>\n                </Stack>\n              </FlexItem>\n            </Flex>\n\n            <Flex>\n              <FlexItem spacer={{ default: 'spacerXl' }}>&nbsp;</FlexItem>\n            </Flex>\n          </Flex>\n        </PageSection>\n      }\n\n      <PageSection>\n        <Split hasGutter>\n          <SplitItem span={6} isFilled className=\"border-gray\">\n            <Stack hasGutter>\n              <StackItem className=\"inner-title pad-bottom\">\n                Not Just Trust. Verifiable Trust.\n              </StackItem>\n              <StackItem className=\"pad-bottom\">\n                <p>\n                  Search and use trusted verified artifacts delivered with\n                  provenance, signatures, and attestation. Enable developers to\n                  choose the dependencies they trust and enable security teams\n                  to verify that trust.\n                </p>\n              </StackItem>\n              <StackItem className=\"pad-bottom\">\n                <div className=\"venn-img\">&nbsp;</div>\n              </StackItem>\n            </Stack>\n          </SplitItem>\n          <SplitItem span={6} isFilled className=\"border-gray\">\n            <Stack hasGutter>\n              <StackItem className=\"inner-title pad-bottom\">\n                Shift Security Left. Recognize your dependencies early.\n              </StackItem>\n              <StackItem className=\"pad-bottom\">\n                <p>\n                  Making trusted choices early in the software development life\n                  cycle does not have to be difficult. Red Hat Dependency\n                  Analytics (RHDA) plugs into your IDE to analyze your\n                  transitive dependencies and offer recommendations on when to\n                  use Red Hat packages.\n                </p>\n              </StackItem>\n              <StackItem className=\"inner-title pad-bottom\">\n                Take advantage of Red Hat expertise.\n              </StackItem>\n              <StackItem className=\"pad-bottom\">\n                <p>\n                  Red Hat has over 20 years of experience curating, building,\n                  and delivering secure software. Organizations, globally, have\n                  taken advantage of Red Hat&apos;s dedicated product security\n                  team to monitor, identify, and address vulnerabilities for all\n                  of Red Hat&apos;s product portfolio - extending that expertise\n                  from OpenSource to the Enterprise.\n                </p>\n              </StackItem>\n              <StackItem>{launchTrustedContentButton}</StackItem>\n            </Stack>\n          </SplitItem>\n        </Split>\n      </PageSection>\n    </React.Fragment>\n  );\n};\n\nHomePage.displayName = 'HomePage';\n\nexport default HomePage;\n","export const RHOpenShiftServiceName = 'Red Hat OpenShift Service';\n\nexport const ClusterTypeAndNameMapping = {\n  ARO: 'Azure Red Hat OpenShift',\n  OSD: 'Openshift Dedicated',\n  MOA: 'Red Hat OpenShift Service on AWS',\n};\n\nexport const RHODAClusterAddonMode = {\n  Detecting: 'Detecting',\n  Install: 'Install',\n  Upgrade: 'Upgrade',\n  Create: 'Create',\n};\n\nexport const CREATE_CLUSTER_HREF = `${document.baseURI}openshift/create `;\nexport const UPGRADE_CLUSTER_HREF = `${document.baseURI}openshift/details/s/{subscriptionID}#machinePools`;\nexport const INSTALL_ADDON_HREF = `${document.baseURI}openshift/details/s/{subscriptionID}#addOns`;\nexport const RHODA_ADDON_ID = 'dbaas-operator';\nexport const ARO_QUICK_START_GUIDE_HREF =\n  'https://access.redhat.com/documentation/en-us/red_hat_openshift_database_access/1/html-single/quick_start_guide/index#manual-installation-of-openshift-database-access-on-azure-red-hat-openshift';\n\nexport const textContent = {\n  cancelClusterAction: 'Cancel',\n  createClusterAction: 'Create new cluster',\n  createClusterContent:\n    'Clicking Create new cluster redirects you to the OpenShift Cluster Manager where you can create a cluster, and install the OpenShift Database Access add-on.',\n  createClusterDescription:\n    'We didn’t detect any clusters. The minimal requirement for installing OpenShift Database Access is running OpenShift Container Platform (OCP) 4.10 or higher.',\n  createClusterLabel:\n    'Create a new cluster with the installation prerequisites',\n  detectingClustersTitle: 'Detecting clusters…',\n  installingClustersTitle: 'Installing add-on…',\n  heroCallToActionButton: 'Learn more about OpenShift Database Access',\n  heroDescription:\n    'Accelerate your data science. OpenShift Database Access is a managed cloud service for data scientists and developers of intelligent applications. Within a fully supported sandbox, it allows businesses to rapidly develop, train, and test artificial intelligence (AI) and machine learning (ML) models using Red Hat and partner technology.',\n  heroTagline: 'Add-on service for managed OpenShift',\n  heroTitle: 'Get started with Red Hat OpenShift Database Access',\n  heroTryItButton: 'Try it in the sandbox',\n  heroViewDemo: 'View the demo',\n  installButton: 'Install it on a cluster',\n  installClusterAction: 'Install',\n  installClusterContent:\n    'The OpenShift Database Access add-on will be installed on the selected cluster. You can remove it later by accessing the Add-ons menu in the OpenShift Cluster Manager(OCM)',\n  installClusterDescription:\n    'We detected clusters that meet the pre-requisites for installing OpenShift Database Access.',\n  installClusterSelectTitlePopoverContent:\n    'A list of clusters that have a minimum required version of OpenShift 4.10 to be compatible with the OpenShift Database Access add-on.',\n  installClusterTitle: 'Install OpenShift Database Access on your cluster',\n  createClusterTitle: 'Clusters were not detected',\n  selectClusterLabel: 'Existing clusters:',\n  upgradeAction: 'Upgrade',\n  upgradeClusterCPUs: 'At least 8 CPUs per node',\n  upgradeClusterDescription:\n    'We detected your clusters, but none meet the installation prerequisites. To install OpenShift Database Access, you can upgrade an existing cluster, or create a new one that meets the prerequisites.',\n  upgradeClusterMemory: 'At least 32 GB of memory per node',\n  upgradeClusterNodes: 'At least 2 worker nodes',\n  upgradeClusterPrerequisites:\n    'For this cluster to meet installation prerequisites, it must have:',\n  upgradeClusterSelectDescription:\n    \"We'll automatically install OpenShift Database Access after the upgrade.\",\n  upgradeClusterSelectLabel: 'Select a cluster to upgrade',\n  videoSectionInThisVideo:\n    'In this video you’ll learn how to quickly build and deploy artificial intelligence and machine learning models using Red Hat and partner technology tools.',\n  videoSectionTitle: 'Demo of Red Hat OpenShift Database Access',\n  AROClusterAlertContent:\n    'Installing OpenShift Database Access on an Azure Red Hat OpenShift (ARO) cluster requires a different process. See the Red Hat OpenShift Database Access Quick Start Guide for more details.',\n};\n\nexport const getTrustificationUrl = () => {\n  return window.location.hostname.indexOf('stage.') === -1\n    ? 'https://trust.rhcloud.com'\n    : 'https://staging.trustification.dev';\n};\n","// all analytics events for trusted artifact signer go here\nconst TrustedArtifactSignerEvents = {\n  TAS_PULL_SECRET_DOWNLOAD_CLICKED: 'tas-ui-clicked-download-pull-secret',\n  TAS_DOCUMENTATION_CLICKED: 'tas-ui-clicked-documentation',\n};\n\n// all analytics events for trusted content go here\nconst TrustedContentEvents = {\n  TC_WAITING_LIST_CLICK: 'tc-learn-more-1-click',\n};\n\nconst ANALYTICS_EVENTS = {\n  ...TrustedArtifactSignerEvents,\n  ...TrustedContentEvents,\n};\n\nexport default ANALYTICS_EVENTS;\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","selector","_a","state","useScalprum","chrome","api","initialized","hasOwn","classNames","classes","arg","argType","push","Array","isArray","inner","toString","includes","key","join","module","exports","default","className","children","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","pageHeaderClasses","Consumer","theme","_b","themeClasses","concat","HomePage","dispatch","analytics","useChrome","hasJoinedList","setHasJoinedList","useState","useEffect","launchTrustedContentButton","Button","href","window","location","hostname","target","rel","component","variant","ouiaId","size","Grid","GridItem","sm","md","Title","headingLevel","Stack","hasGutter","StackItem","TextContent","Text","Split","SplitItem","Popover","headerContent","bodyContent","footerContent","onClick","track","TC_WAITING_LIST_CLICK","title","description","icon","iconPosition","isInline","style","color","PageSection","Flex","justifyContent","FlexItem","spacer","flex","Divider","span","isFilled","displayName","TAS_PULL_SECRET_DOWNLOAD_CLICKED","TAS_DOCUMENTATION_CLICKED"],"sourceRoot":""}